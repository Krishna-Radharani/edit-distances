class Solution {
public:
    int recursion(int index1,int index2,string word1,string word2,vector<vector<int>>&dp){
        //base case
        if(index1<0) return index2+1;
        if(index2<0) return index1+1;
        if(dp[index1][index2]!=-1) return dp[index1][index2];
        if(word1[index1]==word2[index2]){
            return dp[index1][index2]=recursion(index1-1,index2-1,word1,word2,dp);
        }
        return dp[index1][index2]=1+min(recursion(index1,index2-1,word1,word2,dp),min(recursion(index1-1,index2,word1,word2,dp),recursion(index1-1,index2-1,word1,word2,dp)));
    }
    int minDistance(string word1, string word2) {
        vector<vector<int>>dp(word1.length(),vector<int>(word2.length(),-1));
        return recursion(word1.length()-1,word2.length()-1,word1,word2,dp);
        
    }
};
